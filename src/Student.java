import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cpanj
 */
public class Student extends javax.swing.JFrame {

    private Connection conn;
    private PreparedStatement ps;
    private ResultSet rs;
    
    private byte byteImage[];
    private String gender = "";
    private boolean isInsert = false;
    private boolean isUpdate = false;
    
    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();
        conn = MySQLConnect.getConnection();
    	disableAll();
        fillDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpGender = new javax.swing.ButtonGroup();
        rbtTemp = new javax.swing.JRadioButton();
        pnlBg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblEnrollmentNo = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblContact = new javax.swing.JLabel();
        lblQualification = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        txtEnrollmentNo = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        rbtMale = new javax.swing.JRadioButton();
        rbtFemale = new javax.swing.JRadioButton();
        cmbQualification = new javax.swing.JComboBox<>();
        jdcDOB = new com.toedter.calendar.JDateChooser();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAddress = new javax.swing.JTextArea();
        lblImagePath = new javax.swing.JLabel();
        txtImagePath = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        lblPhoto = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnNew = new javax.swing.JToggleButton();
        btnUpdate = new javax.swing.JToggleButton();
        btnDelete = new javax.swing.JToggleButton();
        btnClear = new javax.swing.JToggleButton();
        btnPrint = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable();

        btnGrpGender.add(rbtTemp);
        rbtTemp.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0)));

        lblEnrollmentNo.setText("EnrollmentNo");

        lblName.setText("Name");

        lblGender.setText("Gender");

        lblAge.setText("Age");

        lblContact.setText("ContactNo");

        lblQualification.setText("Qualification");

        lblDOB.setText("DOB");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnGrpGender.add(rbtMale);
        rbtMale.setText("Male");
        rbtMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMaleActionPerformed(evt);
            }
        });

        btnGrpGender.add(rbtFemale);
        rbtFemale.setText("Female");
        rbtFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFemaleActionPerformed(evt);
            }
        });

        cmbQualification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "BE", "MS", "MBA", "LLB" }));
        cmbQualification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbQualificationActionPerformed(evt);
            }
        });

        lblAddress.setText("Address");

        taAddress.setColumns(20);
        taAddress.setRows(5);
        jScrollPane1.setViewportView(taAddress);

        lblImagePath.setText("Image Path");

        txtImagePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImagePathActionPerformed(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        lblPhoto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jDesktopPane1.setLayer(lblPhoto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnUploadImage.setText("Upload Image");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtFemale))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblContact)
                                    .addComponent(lblQualification)
                                    .addComponent(lblDOB)
                                    .addComponent(lblName)
                                    .addComponent(lblGender)
                                    .addComponent(lblAge))
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblEnrollmentNo)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnrollmentNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(rbtMale)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtAge)
                            .addComponent(txtContactNo)
                            .addComponent(cmbQualification, 0, 210, Short.MAX_VALUE)
                            .addComponent(jdcDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImagePath)
                            .addComponent(lblAddress))
                        .addGap(28, 28, 28)
                        .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnrollmentNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEnrollmentNo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtMale)
                            .addComponent(rbtFemale))
                        .addGap(18, 18, 18)
                        .addComponent(txtAge)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContactNo)
                            .addComponent(lblContact))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbQualification)
                            .addComponent(lblQualification))
                        .addGap(18, 18, 18)
                        .addComponent(jdcDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(lblGender)
                                        .addGap(24, 24, 24)
                                        .addComponent(lblAge)
                                        .addGap(21, 21, 21))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(btnUploadImage)
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addComponent(lblDOB)
                                        .addGap(6, 6, 6))))
                            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 0)));

        lblSearch.setText("Search");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblSearch)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrint)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbData);

        javax.swing.GroupLayout pnlBgLayout = new javax.swing.GroupLayout(pnlBg);
        pnlBg.setLayout(pnlBgLayout);
        pnlBgLayout.setHorizontalGroup(
            pnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlBgLayout.setVerticalGroup(
            pnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBgLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbQualificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbQualificationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbQualificationActionPerformed

    private void txtImagePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImagePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImagePathActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        if(!isInsert){
    		 // I pressed the New BUtton
    		enableAll();
    		clearAll();
    		btnNew.setLabel("save");
    	}else{
    		// I pressed Save button
    		insertStudent();
    		disableAll();
    		btnNew.setLabel("New");
    	}
    	isInsert = !isInsert;
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void rbtMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMaleActionPerformed
        gender = "Male";
    }//GEN-LAST:event_rbtMaleActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser chooser = new JFileChooser();
    	chooser.setFileFilter(new FileNameExtensionFilter("JPEG Files","jpg","jpeg"));
    	chooser.showOpenDialog(this);
    	File sourceFile = chooser.getSelectedFile();
    	if(sourceFile != null){
    		String  sourceFilePath = sourceFile.getAbsolutePath();
    		txtImagePath.setText(sourceFilePath);
    		BufferedImage thumbnail;
    		try{
    			thumbnail = Thumbnails.of(sourceFile).size(221,264).asBufferedImage();
                        
    			ByteArrayOutputStream baos = new ByteArrayOutputStream();
    			ImageIO.write(thumbnail,"jpg",baos);
    			byteImage = baos.toByteArray();
    			lblPhoto.setIcon(new ImageIcon(thumbnail));
    		}catch(IOException e){
    			JOptionPane.showMessageDialog(null, "Some Error while creating thumbnail: "+ e.getMessage());
    		}
    	}
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void rbtFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFemaleActionPerformed
        gender = "Female";
    }//GEN-LAST:event_rbtFemaleActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(!isUpdate){
            enableAll();
            txtEnrollmentNo.setEnabled(false);
            btnUpdate.setLabel("save");
            btnNew.setEnabled(false);
            btnDelete.setEnabled(false);
        }else{
            //I pressed Save Button
            updateStudent();
            disableAll();
            btnUpdate.setLabel("Update");
            
            fillDataTable();
            btnUpdate.setEnabled(false);
            btnNew.setEnabled(true);
        }
        isUpdate = !isUpdate;
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int ans = JOptionPane.showConfirmDialog(this, "are you sure you wanna delete this recocrd?",
                "Delete",JOptionPane.YES_NO_OPTION);
        
        if(ans == JOptionPane.YES_OPTION){
            //you pressed yes!!
            String sql = "DELETE FROM students WHERE enrollment_no = ?";
            try{
                ps = conn.prepareStatement(sql);
                ps.setInt(1,Integer.parseInt(txtEnrollmentNo.getText()));
                ps.execute();
                
                fillDataTable();
                
                btnUpdate.setEnabled(false);
                btnDelete.setEnabled(false);
                clearAll();
                JOptionPane.showMessageDialog(null,"The record has been delted Successfully!");
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Error while deleting the record "+e.getMessage());
            }
        }else{
            // for no option write code here 
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        int selectedRow = jtbData.getSelectedRow();
        String enrollmentNumber = jtbData.getValueAt(selectedRow,0).toString();
        try{
            String sql = "SELECT * FROM students WHERE enrollment_no = "+ enrollmentNumber;
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            if(rs.next()){
                txtEnrollmentNo.setText(rs.getString("enrollment_no"));
                txtName.setText(rs.getString("name"));
                String selectedGender = rs.getString("gender");
                if("Male".equalsIgnoreCase(selectedGender)){
                    gender = "Male";
                    rbtMale.setSelected(true);
                }else{
                    gender = "Female";
                    rbtFemale.setSelected(true);
                }
                txtContactNo.setText(rs.getString("contact_no"));
                txtAge.setText(rs.getString("age"));
                
                cmbQualification.setSelectedItem(rs.getString("qualification"));
                
                String dateOfBirth = rs.getString("dob");
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
                Date date = sdf.parse(dateOfBirth);
                jdcDOB.setDate(date);
                
                taAddress.setText(rs.getString("address"));
                
                byteImage = rs.getBytes("image");
                BufferedImage image = ImageIO.read(new ByteArrayInputStream(byteImage));
                ImageIcon icon = new ImageIcon(image);
                lblPhoto.setIcon(icon);
                
                btnUpdate.setEnabled(true);
                btnDelete.setEnabled(true);
                
                
            }
        } catch (SQLException | ParseException | IOException e) {
            JOptionPane.showMessageDialog(null, "Error while fetching data" + e.getMessage());
        }
    }//GEN-LAST:event_jtbDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnClear;
    private javax.swing.JToggleButton btnDelete;
    private javax.swing.ButtonGroup btnGrpGender;
    private javax.swing.JToggleButton btnNew;
    private javax.swing.JToggleButton btnPrint;
    private javax.swing.JToggleButton btnUpdate;
    private javax.swing.JToggleButton btnUploadImage;
    private javax.swing.JComboBox<String> cmbQualification;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcDOB;
    private javax.swing.JTable jtbData;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEnrollmentNo;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImagePath;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblQualification;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel pnlBg;
    private javax.swing.JRadioButton rbtFemale;
    private javax.swing.JRadioButton rbtMale;
    private javax.swing.JRadioButton rbtTemp;
    private javax.swing.JTextArea taAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtEnrollmentNo;
    private javax.swing.JTextField txtImagePath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void disableAll() {
        txtAge.setEditable(false);
    	txtContactNo.setEditable(false);
    	txtEnrollmentNo.setEditable(false);
    	txtName.setEditable(false);
    	taAddress.setEditable(false);
    	cmbQualification.setEnabled(false);
    	jdcDOB.setEnabled(false);
    	btnUploadImage.setEnabled(false);
    	rbtFemale.setEnabled(false);
    	rbtMale.setEnabled(false);
    }
    private void enableAll(){
    	txtAge.setEditable(true);
    	txtContactNo.setEditable(true);
    	txtEnrollmentNo.setEditable(true);
    	txtName.setEditable(true);
    	taAddress.setEditable(true);
    	cmbQualification.setEnabled(true);
    	jdcDOB.setEnabled(true);
    	btnUploadImage.setEnabled(true);
    	rbtFemale.setEnabled(true);
    	rbtMale.setEnabled(true);
    } 
    private void clearAll(){
    	txtAge.setText("");
    	txtContactNo.setText("");
    	txtName.setText("");
    	txtEnrollmentNo.setText("");
    	taAddress.setText("");
    	txtImagePath.setText("");
    	cmbQualification.setSelectedIndex(0);
    	rbtTemp.setSelected(true);
    	jdcDOB.setDate(null);
    	lblPhoto.setIcon(null);
    }

    private void insertStudent() {
        String sql = "INSERT INTO students"
    	 			 + "(enrollment_no, name, gender, age, contact_no, qualification,dob,address,image)" 
    	 			 + "VALUES (?,?,?,?,?,?,?,?,?)";
		
		String enrollment_no = txtEnrollmentNo.getText();
		String name = txtName.getText();
		String age= txtAge.getText();
		String contactNo = txtContactNo.getText();
		String qualification = cmbQualification.getSelectedItem().toString();
		String address = taAddress.getText();    	 			 

		Date selectedDate = jdcDOB.getDate();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String formattedDate = sdf.format(selectedDate);

		try{
			ps=conn.prepareStatement(sql);
			ps.setString(1,enrollment_no);
			ps.setString(2,name);
			ps.setString(3,gender);
			ps.setString(4,age);
			ps.setString(5,contactNo);
			ps.setString(6,qualification);
			ps.setString(7,formattedDate);
			ps.setString(8,address);
			ps.setBytes(9,byteImage);

			ps.execute();
			clearAll();
                        fillDataTable();
			JOptionPane.showMessageDialog(this,"Record inserted successfully","SUCCESS!",JOptionPane.INFORMATION_MESSAGE);
		}catch(SQLException se){
			JOptionPane.showMessageDialog(this,"Error while Inserting"+se.getMessage(),"ERROR!",JOptionPane.ERROR_MESSAGE);
		}
    }

    private DefaultTableModel getMyTableModel(TableModel dtm){
        
        int nRow = dtm.getRowCount();
        int nCol = dtm.getColumnCount();
        
        Object[][] tableData = new Object[nRow][nCol-1];
        for(int i =0; i< nRow; i++){
            for(int j=1 ; j<nCol;j++){
                tableData[i][j-1] = dtm.getValueAt(i, j);
            }
        }
        
        String colHeads[] = {"Enrollment No","Name","Gender","Age","Contact","Qualification","DOB","Address","Image"};
        
        DefaultTableModel myModel  = new DefaultTableModel(tableData, colHeads){
            @Override
            public boolean isCellEditable(int row , int column){
                return false;
            }
        };
        
        return myModel;
    }
    
    private void fillDataTable() {
     try{
        String sql = "SELECT * FROM students";
        ps = conn.prepareStatement(sql);
        rs = ps.executeQuery();
        jtbData.setModel(getMyTableModel(DbUtils.resultSetToTableModel(rs)));
     }catch(SQLException e){
         JOptionPane.showMessageDialog(null,"error while fetching data"+ e.getMessage());
     }
    }
    
    private void updateStudent(){
        String sql = "UPDATE students SET name = ?, gender = ?, age = ? , contact_no = ?, qualification = ?,"
                + "dob = ?, address = ?, image = ? WHERE enrollment_no = ? ";
        String enrollmentNo = txtEnrollmentNo.getText();
        String name = txtName.getText();
        String age = txtAge.getText();
        String contact_no = txtContactNo.getText();
        String qualification = cmbQualification.getSelectedItem().toString();
        String address = taAddress.getText();
        
        Date selectedDate = jdcDOB.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(selectedDate);
        
        try{
            ps = conn.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, gender);
            ps.setString(3, age);
            ps.setString(4, contact_no);
            ps.setString(5, qualification);
            ps.setString(6, formattedDate);
            ps.setString(7, address);
            ps.setBytes(8, byteImage);
            ps.setInt(9, Integer.parseInt(enrollmentNo));
            ps.execute();
            
            clearAll();
            JOptionPane.showMessageDialog(null,"Record Updated Successfully!!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Record Updated Failed!!"+e.getMessage());
        }
    }
    
    
}
